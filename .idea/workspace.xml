<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AndroidLayouts">
    <shared>
      <config />
    </shared>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="NONE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b0aa0bb0-4ed2-4b22-96bb-c9115cc33046" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Dart File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2uKXEKE1NjnaALGHSuwdqhSIuyE" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Flutter Test.Carga y muestra la lista de películas correctamente.executor&quot;: &quot;Run&quot;,
    &quot;Flutter Test.Debe retornar una lista de películas al hacer la petición.executor&quot;: &quot;Run&quot;,
    &quot;Flutter Test.Debe retornar una lista de películas cuando getMovies() es llamado.executor&quot;: &quot;Run&quot;,
    &quot;Flutter Test.tests in app_test.dart.executor&quot;: &quot;Run&quot;,
    &quot;Flutter Test.tests in movie-repository.dart.executor&quot;: &quot;Run&quot;,
    &quot;Flutter.main.dart.executor&quot;: &quot;Debug&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,
    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;dart.analysis.tool.window.visible&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;io.flutter.reload.alreadyRun&quot;: &quot;true&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Marcos/Apps/movies/lib/ui/games&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;flutter.settings&quot;,
    &quot;show.migrate.to.gradle.popup&quot;: &quot;false&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Marcos\Apps\movies\lib\ui\games" />
      <recent name="C:\Marcos\Apps\movies\integration_test" />
      <recent name="C:\Marcos\Apps\movies\test\data" />
      <recent name="C:\Marcos\Apps\boardgamesmsf\lib\util\formato" />
      <recent name="C:\Marcos\Apps\boardgamesmsf\assets\icon" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Marcos\Apps\movies\test" />
      <recent name="C:\Marcos\Apps\boardgamesmsf\lib\data" />
      <recent name="C:\Marcos\Apps\boardgamesmsf\assets\fonts" />
      <recent name="C:\Marcos\Apps\boardgamesmsf\lib\domain\games" />
    </key>
  </component>
  <component name="RunManager" selected="Flutter Test.tests in movie-repository.dart">
    <configuration name="main.dart" type="FlutterRunConfigurationType" factoryName="Flutter">
      <option name="filePath" value="$PROJECT_DIR$/lib/main.dart" />
      <method v="2" />
    </configuration>
    <configuration name="Carga y muestra la lista de películas correctamente" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testName" value="Carga y muestra la lista de películas correctamente" />
      <option name="testFile" value="$PROJECT_DIR$/integration_test/app_test.dart" />
      <option name="useRegexp" value="true" />
      <method v="2" />
    </configuration>
    <configuration name="Debe retornar una lista de películas al hacer la petición" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testName" value="Debe retornar una lista de películas al hacer la petición" />
      <option name="testFile" value="$PROJECT_DIR$/test/data/movie-repository.dart" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="Debe retornar una lista de películas cuando getMovies() es llamado" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testName" value="Debe retornar una lista de películas cuando getMovies() es llamado" />
      <option name="testFile" value="$PROJECT_DIR$/test/movie-repository.dart" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="tests in app_test.dart" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testFile" value="$PROJECT_DIR$/integration_test/app_test.dart" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="tests in movie-repository.dart" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testFile" value="$PROJECT_DIR$/test/movie-repository.dart" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Flutter Test.tests in movie-repository.dart" />
        <item itemvalue="Flutter Test.tests in app_test.dart" />
        <item itemvalue="Flutter Test.Debe retornar una lista de películas cuando getMovies() es llamado" />
        <item itemvalue="Flutter Test.Carga y muestra la lista de películas correctamente" />
        <item itemvalue="Flutter Test.Debe retornar una lista de películas al hacer la petición" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="b0aa0bb0-4ed2-4b22-96bb-c9115cc33046" name="Changes" comment="" />
      <created>1741998129922</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1741998129922</updated>
    </task>
    <servers />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="Dart">
          <url>file://$PROJECT_DIR$/lib/ui/movies/detail-movie-old.dart</url>
          <line>113</line>
          <option name="timeStamp" value="5" />
        </line-breakpoint>
      </breakpoints>
      <default-breakpoints>
        <breakpoint type="dart-exception" />
      </default-breakpoints>
    </breakpoint-manager>
  </component>
</project>